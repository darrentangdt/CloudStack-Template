#!/bin/bash 
#
# cloud-set-guest-sshkey    SSH Public Keys Download Client
#
# chkconfig: 2345 98 02
# description: SSH Public Keys Download Client
#
# Modify this line to specify the user (default is root)
user=root

### BEGIN INIT INFO
# Provides: cloud-set-guest-sshkey
# Required-Start: $local_fs $network $sshd
# Required-Stop: $local_fs $syslog
# Should-Start: $syslog
# Should-Stop: $network $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: 
# Description:       SSH Public Keys Download Client
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

function find_lease() {
  # Determine primary network adapter name
  NIC=`ip link | grep UP | grep -v LOOPBACK | awk -F':' '{print $2}' | tr -d ' '`

  # Add your DHCP lease folders here
  if [ -f /etc/debian_version ]; then
    # Ubuntu
    #DHCP_FOLDERS="/var/lib/dhcpcd/dhcpcd-eth0.*"
    DHCP_FOLDERS="/var/lib/dhclient/*$NIC* /var/lib/dhcp3/*$NIC* /var/lib/dhcp/*$NIC*"
  elif [ -f /etc/redhat-release ]; then
    # Redhat / CentOS / Scientific Linux
    DHCP_FOLDERS="/var/lib/dhclient/*$NIC* /var/lib/dhcp3/*$NIC*"
  else
    # Others
    DHCP_FOLDERS="/var/lib/dhclient/*$NIC* /var/lib/dhcp3/*$NIC*"
  fi

  DHCLIENT=$(which dhclient)
  RESTART_DHCLIENT=true
  for DHCP_FILE in $DHCP_FOLDERS; do
    if [ -f $DHCP_FILE ]; then
        LEASE_FILE=$DHCP_FILE
        logger -t "cloud" "DHCP file ($LEASE_FILE) exists. No need to restart dhclient."
        RESTART_DHCLIENT=false
    fi
  done

  if [ $RESTART_DHCLIENT = true ]; then
    logger -t "cloud" "DHCP file does not exist. Restarting dhclient."
    DHCLIENT_PID=$(ps ax | grep dhclient | awk {'print $1'})
    if [ -n $DHCLIENT_PID ]; then
          for CLIENTPID in $DHCLIENT_PID; do
            kill $CLIENTPID
          done
    fi
    $DHCLIENT
    find_lease
  fi
}


function cloud_set_guest_sshkey() {

    keys_received=0
    file_count=0
    
    find_lease
        
    SSHKEY_SERVER_IP=$(grep dhcp-server-identifier $LEASE_FILE | tail -1 | awk '{print $NF}' | tr -d '\;')

    if [ -n $SSHKEY_SERVER_IP ]; then
        logger -t "cloud" "Sending request to ssh key server at $SSHKEY_SERVER_IP"

        publickey=$(wget -t 3 -T 20 -O - http://$SSHKEY_SERVER_IP/latest/public-keys 2>/dev/null)

        if [ $? -eq 0 ]; then
            logger -t "cloud" "Got response from server at $SSHKEY_SERVER_IP"
            keys_received=1
            break
        fi
    else
        logger -t "cloud" "Could not find ssh key server IP in $LEASE_FILE"
    fi


    # did we find the keys anywhere?
    if [ "$keys_received" == "0" ]; then
        logger -t "cloud" "Failed to get ssh keys from any server"
        exit 1
    fi

    # set ssh public key
    homedir=$(grep ^$user /etc/passwd|awk -F ":" '{print $6}')
    sshdir=$homedir/.ssh
    authorized=$sshdir/authorized_keys

    if [ ! -e $sshdir ]; then
        mkdir $sshdir
    fi

    if [ ! -e $authorized ]; then
        touch $authorized
    fi

    if [ `grep -c "$publickey" $authorized` == 0 ]; then
            echo "$publickey" >> $authorized
            /sbin/restorecon -R $homedir/.ssh
    fi
}

# See how we were called.
case "$1" in
  start)
      action $"Starting cloud-set-guest-sshkey: " /bin/true
      cloud_set_guest_sshkey
      RETVAL=$?
    ;;
  stop)
      action $"Shutting down cloud-set-guest-sshkey: " /bin/true
      RETVAL=$?
      ;;
  restart)
      $0 stop
      $0 start
      ;;
  *)
      echo $"Usage: cloud-set-guest-sshey {start}"
      RETVAL=2
      ;;
esac

exit $RETVAL
